Пакет скриптов для автоматизации изменения SystemUI под lidroid © SpellCaster

Автоматизирует инструкцию от sk0t (http://4pda.ru/forum/index.php?s=&showtopic=196047&view=findpost&p=12602328)

Требования:
	* Установленная Java (JDK)
	* Папка, в которой будут размещены файлы Пакета, не должна иметь в пути пробелов и не-латинских символов
	* На целевом девайсе: права рута и доступ на запись в /system/app	

Состав пакета:

	Исходные данные
		\qp\ - *модифицированный* пакет замен файлов от sk0t
		\framework\ - пустая папка для файлов фреймворка

	Инструменты
		\7za.exe - архиватор
		\apktool.jar - программа для сборки-разборки apk
		\aapt.exe - программа, требующаяся для сборки apk
		\APK_worker.bat - главный скрипт
		\qpid_repl.js - скрипт для замены id в qpids.smali (запускается из APK_worker)
		\xml_add.js - скрипт для манипуляций с xml (запускается из APK_worker)
	
	Разное:
		\README - этот файл
		\QuickPanelSettings.apk - приложение для настройки отображаемых индикаторов (скачать с 4pda: см. по ссылке выше)

Применение:

1) Скачать с целевого девайса файлы /system/framework/*.apk (ВСЕ с расширением apk!) (поместить в папку \framework) и /system/app/SystemUI.apk, поместить рядом с файлами Пакета.

2) Запустить APK_worker.bat

3) Для начала попробовать выполнить в автоматическом режиме (Step = 0). Пошаговый режим - для отладки, если возникают ошибки

4) Если всё благополучно, скрипт завершится без ошибок, а итоговое приложение будет сохранено как SystemUI_mod.apk

5) Записать SystemUI_mod.apk на целевой девайс в /system/app (предварительно переименовать в SystemUI.apk). Перегрузить девайс.
Через adb это делается так:
	adb push SystemUI_mod.apk /system/app/SystemUI.apk
	adb reboot

6) Если возникнут ошибки запуска com.android.statusbar, посмотреть лог (выполнить в эмуляторе терминала на целевом девайсе либо через adb shell)
	logcat
Сохранить лог в файл:
	logcat > /sdcard/err.log
	
7) Поставить приложение QuickPanelSettings